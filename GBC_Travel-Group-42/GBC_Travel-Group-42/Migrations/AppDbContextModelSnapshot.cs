// <auto-generated />
using System;
using GBC_Travel_Group_42.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GBC_Travel_Group_42.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GBC_Travel_Group_42.Models.BookCarRental", b =>
                {
                    b.Property<int>("BookingCarRentalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingCarRentalId"));

                    b.Property<string>("Accommodations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarRentalId")
                        .HasColumnType("int");

                    b.Property<string>("GuestEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RentalDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("RentalPickupDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RentalReturnDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RentalTotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BookingCarRentalId");

                    b.HasIndex("CarRentalId");

                    b.ToTable("BookingCarRentals");

                    b.HasData(
                        new
                        {
                            BookingCarRentalId = 1,
                            Accommodations = "extra seating",
                            CarRentalId = 1,
                            GuestEmail = "fakeemail3@yes.com",
                            GuestFirstName = "Adam",
                            GuestLastName = "Simcoe",
                            RentalDuration = 3,
                            RentalPickupDateTime = new DateTime(2024, 2, 21, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            RentalReturnDateTime = new DateTime(2024, 2, 24, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            RentalTotalPrice = 449.97m
                        });
                });

            modelBuilder.Entity("GBC_Travel_Group_42.Models.BookFlight", b =>
                {
                    b.Property<int>("BookingFlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingFlightId"));

                    b.Property<string>("Accommodations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FlightId")
                        .HasColumnType("int");

                    b.Property<string>("GuestEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookingFlightId");

                    b.HasIndex("FlightId");

                    b.ToTable("BookingFlights");

                    b.HasData(
                        new
                        {
                            BookingFlightId = 1,
                            Accommodations = "Need extra luggage space",
                            FlightId = 1,
                            GuestEmail = "fakeemail@yes.com",
                            GuestFirstName = "John",
                            GuestLastName = "Doe"
                        });
                });

            modelBuilder.Entity("GBC_Travel_Group_42.Models.BookHotel", b =>
                {
                    b.Property<int>("BookingHotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingHotelId"));

                    b.Property<string>("Accommodations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CheckInDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExpectedStayDuration")
                        .HasColumnType("int");

                    b.Property<string>("GuestEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<decimal>("HotelTotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BookingHotelId");

                    b.HasIndex("HotelId");

                    b.ToTable("BookingHotels");

                    b.HasData(
                        new
                        {
                            BookingHotelId = 1,
                            Accommodations = "Need extra towels",
                            CheckInDateTime = new DateTime(2024, 2, 22, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDateTime = new DateTime(2024, 2, 25, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            ExpectedStayDuration = 3,
                            GuestEmail = "fakeemail2@yes.com",
                            GuestFirstName = "Jane",
                            GuestLastName = "Doe",
                            HotelId = 1,
                            HotelTotalPrice = 1199.97m
                        });
                });

            modelBuilder.Entity("GBC_Travel_Group_42.Models.CarRental", b =>
                {
                    b.Property<int>("CarRentalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarRentalId"));

                    b.Property<string>("CarRentalMake")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaximumOccupancy")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("CarRentalId");

                    b.ToTable("CarRentals");

                    b.HasData(
                        new
                        {
                            CarRentalId = 1,
                            CarRentalMake = "2024 Nissan Rogue",
                            MaximumOccupancy = 2,
                            PricePerDay = 149.99m,
                            Rating = 5
                        },
                        new
                        {
                            CarRentalId = 2,
                            CarRentalMake = "2019 Chevrolet Malibu",
                            MaximumOccupancy = 2,
                            PricePerDay = 199.99m,
                            Rating = 5
                        },
                        new
                        {
                            CarRentalId = 3,
                            CarRentalMake = "2024 Toyota Sienna",
                            MaximumOccupancy = 2,
                            PricePerDay = 99.99m,
                            Rating = 4
                        },
                        new
                        {
                            CarRentalId = 4,
                            CarRentalMake = "2024 Mitsubishi Mirage",
                            MaximumOccupancy = 2,
                            PricePerDay = 79.99m,
                            Rating = 4
                        },
                        new
                        {
                            CarRentalId = 5,
                            CarRentalMake = "2019 Toyota Corolla",
                            MaximumOccupancy = 2,
                            PricePerDay = 49.99m,
                            Rating = 3
                        },
                        new
                        {
                            CarRentalId = 6,
                            CarRentalMake = "2024 Ford Transit Van",
                            MaximumOccupancy = 2,
                            PricePerDay = 59.99m,
                            Rating = 3
                        },
                        new
                        {
                            CarRentalId = 7,
                            CarRentalMake = "2021 Nissan NV200",
                            MaximumOccupancy = 2,
                            PricePerDay = 69.99m,
                            Rating = 2
                        },
                        new
                        {
                            CarRentalId = 8,
                            CarRentalMake = "2024 Ford Edge",
                            MaximumOccupancy = 2,
                            PricePerDay = 129.99m,
                            Rating = 2
                        },
                        new
                        {
                            CarRentalId = 9,
                            CarRentalMake = "2024 Audi Q3",
                            MaximumOccupancy = 2,
                            PricePerDay = 119.99m,
                            Rating = 1
                        },
                        new
                        {
                            CarRentalId = 10,
                            CarRentalMake = "2023 Chevrolet Express",
                            MaximumOccupancy = 2,
                            PricePerDay = 89.99m,
                            Rating = 1
                        });
                });

            modelBuilder.Entity("GBC_Travel_Group_42.Models.Flight", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlightId"));

                    b.Property<DateTime>("ArrivalDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaximumOccupancy")
                        .HasColumnType("int");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("FlightId");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            FlightId = 1,
                            ArrivalDateTime = new DateTime(2024, 3, 1, 22, 30, 0, 0, DateTimeKind.Unspecified),
                            DepartureDateTime = new DateTime(2024, 3, 1, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Tokyo, JP",
                            FlightNumber = "KH734",
                            MaximumOccupancy = 2,
                            Origin = "Toronto, CA",
                            Price = 1349.99m,
                            Rating = 5
                        },
                        new
                        {
                            FlightId = 2,
                            ArrivalDateTime = new DateTime(2024, 3, 2, 1, 30, 0, 0, DateTimeKind.Unspecified),
                            DepartureDateTime = new DateTime(2024, 3, 1, 9, 30, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Sydney, AU",
                            FlightNumber = "KH767",
                            MaximumOccupancy = 2,
                            Origin = "Montreal, CA",
                            Price = 1299.99m,
                            Rating = 4
                        },
                        new
                        {
                            FlightId = 3,
                            ArrivalDateTime = new DateTime(2024, 3, 2, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartureDateTime = new DateTime(2024, 3, 2, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Los Angeles, US",
                            FlightNumber = "KF647",
                            MaximumOccupancy = 2,
                            Origin = "London, UK",
                            Price = 899.99m,
                            Rating = 3
                        },
                        new
                        {
                            FlightId = 4,
                            ArrivalDateTime = new DateTime(2024, 3, 2, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            DepartureDateTime = new DateTime(2024, 3, 2, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Paris, FR",
                            FlightNumber = "KF867",
                            MaximumOccupancy = 2,
                            Origin = "New York City, US",
                            Price = 1099.99m,
                            Rating = 5
                        },
                        new
                        {
                            FlightId = 5,
                            ArrivalDateTime = new DateTime(2024, 3, 3, 20, 30, 0, 0, DateTimeKind.Unspecified),
                            DepartureDateTime = new DateTime(2024, 3, 3, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Hong Kong, CN",
                            FlightNumber = "KR765",
                            MaximumOccupancy = 2,
                            Origin = "Athens, GR",
                            Price = 799.99m,
                            Rating = 2
                        },
                        new
                        {
                            FlightId = 6,
                            ArrivalDateTime = new DateTime(2024, 3, 3, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            DepartureDateTime = new DateTime(2024, 3, 3, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            Destination = "New York City, US",
                            FlightNumber = "KR456",
                            MaximumOccupancy = 2,
                            Origin = "Tokyo, JP",
                            Price = 859.99m,
                            Rating = 2
                        },
                        new
                        {
                            FlightId = 7,
                            ArrivalDateTime = new DateTime(2024, 3, 5, 3, 30, 0, 0, DateTimeKind.Unspecified),
                            DepartureDateTime = new DateTime(2024, 3, 4, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            Destination = "London, UK",
                            FlightNumber = "KG699",
                            MaximumOccupancy = 2,
                            Origin = "Hong Kong, CN",
                            Price = 749.99m,
                            Rating = 1
                        },
                        new
                        {
                            FlightId = 8,
                            ArrivalDateTime = new DateTime(2024, 3, 4, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            DepartureDateTime = new DateTime(2024, 3, 4, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Montreal, CA",
                            FlightNumber = "KG921",
                            MaximumOccupancy = 2,
                            Origin = "Los Angeles, US",
                            Price = 699.99m,
                            Rating = 1
                        },
                        new
                        {
                            FlightId = 9,
                            ArrivalDateTime = new DateTime(2024, 3, 5, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            DepartureDateTime = new DateTime(2024, 3, 5, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Toronto, CA",
                            FlightNumber = "KK432",
                            MaximumOccupancy = 2,
                            Origin = "Paris, FR",
                            Price = 1349.99m,
                            Rating = 3
                        },
                        new
                        {
                            FlightId = 10,
                            ArrivalDateTime = new DateTime(2024, 3, 6, 1, 30, 0, 0, DateTimeKind.Unspecified),
                            DepartureDateTime = new DateTime(2024, 3, 5, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            Destination = "Athens, GR",
                            FlightNumber = "KK420",
                            MaximumOccupancy = 2,
                            Origin = "Sydney, AU",
                            Price = 1349.99m,
                            Rating = 4
                        });
                });

            modelBuilder.Entity("GBC_Travel_Group_42.Models.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelId"));

                    b.Property<string>("HotelLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaximumOccupancy")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("HotelId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            HotelId = 1,
                            HotelLocation = "Ag. Dimitriou 18, Athina 105 54, Greece",
                            HotelName = "Arion Athens Hotel",
                            MaximumOccupancy = 2,
                            PricePerNight = 399.99m,
                            Rating = 4
                        },
                        new
                        {
                            HotelId = 2,
                            HotelLocation = "7 Rue de la Verrerie, 75004 Paris, France",
                            HotelName = "Hotel Le Grand Mazarin",
                            MaximumOccupancy = 2,
                            PricePerNight = 499.99m,
                            Rating = 5
                        },
                        new
                        {
                            HotelId = 3,
                            HotelLocation = "4-1 Kioicho, Chiyoda City, Tokyo 102-8578, Japan",
                            HotelName = "Hotel New Otani Tokyo",
                            MaximumOccupancy = 2,
                            PricePerNight = 549.99m,
                            Rating = 5
                        },
                        new
                        {
                            HotelId = 4,
                            HotelLocation = "161 Elizabeth St, Sydney NSW 2000, Australia",
                            HotelName = "Sheraton Grand Sydney Hyde Park",
                            MaximumOccupancy = 2,
                            PricePerNight = 349.99m,
                            Rating = 4
                        },
                        new
                        {
                            HotelId = 5,
                            HotelLocation = "234 W 42nd St, New York, NY 10036, United States",
                            HotelName = "Hilton New York Times Square",
                            MaximumOccupancy = 2,
                            PricePerNight = 449.99m,
                            Rating = 3
                        },
                        new
                        {
                            HotelId = 6,
                            HotelLocation = "23 Austin Ave, Tsim Sha Tsui, Hong Kong, China",
                            HotelName = "Ramada Hong Kong Grand",
                            MaximumOccupancy = 2,
                            PricePerNight = 399.99m,
                            Rating = 3
                        },
                        new
                        {
                            HotelId = 7,
                            HotelLocation = "1 Lancaster Gate, London W2 3LG, United Kingdom",
                            HotelName = "Corus Hotel Hyde Park",
                            MaximumOccupancy = 2,
                            PricePerNight = 299.99m,
                            Rating = 2
                        },
                        new
                        {
                            HotelId = 8,
                            HotelLocation = "2645 Av. Desjardins, Montréal, QC H1V 2H8, Canada",
                            HotelName = "Gite du Survenant Montreal",
                            MaximumOccupancy = 2,
                            PricePerNight = 249.99m,
                            Rating = 2
                        },
                        new
                        {
                            HotelId = 9,
                            HotelLocation = "1 King St W, Toronto, ON M5H 1A1, Canada",
                            HotelName = "One King West Hotel & Residence",
                            MaximumOccupancy = 2,
                            PricePerNight = 399.99m,
                            Rating = 1
                        },
                        new
                        {
                            HotelId = 10,
                            HotelLocation = "9750 Airport Blvd, Los Angeles, CA 90045, United States",
                            HotelName = "Four Points by Sheraton LA International Airport",
                            MaximumOccupancy = 2,
                            PricePerNight = 299.99m,
                            Rating = 1
                        });
                });

            modelBuilder.Entity("GBC_Travel_Group_42.Models.BookCarRental", b =>
                {
                    b.HasOne("GBC_Travel_Group_42.Models.CarRental", "CarRental")
                        .WithMany()
                        .HasForeignKey("CarRentalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarRental");
                });

            modelBuilder.Entity("GBC_Travel_Group_42.Models.BookFlight", b =>
                {
                    b.HasOne("GBC_Travel_Group_42.Models.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flight");
                });

            modelBuilder.Entity("GBC_Travel_Group_42.Models.BookHotel", b =>
                {
                    b.HasOne("GBC_Travel_Group_42.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });
#pragma warning restore 612, 618
        }
    }
}
